@{
    ViewData["Title"] = "Tarea";
    ViewData["Navbar-Title"] = "Engagement > Tarea";


    List<object> operators = new List<object>();
    operators.Add(new { value = "contains", text = "contains" });
    //var formatoFecha = new { type = "datetime", format = "dd-MMM-yyyy" };
}
@model wDualAssistence.Models.TareaViewModel;

@section Styles {
    <style>
        .spanIcon {
            border-radius: 5px;
            border-style: solid;
            border-color: white;
        }
    </style>
}

<div class="content-wrapper">
    <div class="content">
        <div class="panel panel-default">
            <div class="panel-heading heading-primary">
                <span class="capa_btn info">
                    <button type="submit" class="btn btn-base crear" onclick="Crear()">
                        <span class="fa span-button info"></span>
                        <p class="text-button-primary">Crear</p>
                    </button>
                </span>
            </div>
            <div class="panel-body">
                <section class="content-body">
                    <ejs-grid id="Grid" created="onCreateGrid" allowPaging="true" allowFiltering="true" locale="es" gridLines="Both">
                        <e-grid-filterSettings type="Menu" mode="OnEnter" operators="@(new { stringOperator = operators })"></e-grid-filterSettings>
                        <e-grid-pagesettings enableQueryString="true" pageSize="10"></e-grid-pagesettings>
                        <e-grid-columns>
                            <e-grid-column field="id" isPrimaryKey="true" visible="false" type="string" headerTextAlign="Center" textAlign="Left" width="140"></e-grid-column>
                            <e-grid-column field="nombre" headerText="NOMBRE" type="string" headerTextAlign="Center" textAlign="Left" width="140"></e-grid-column>
                            <e-grid-column field="categoria" headerText="CATEGORIA" type="string" headerTextAlign="Center" textAlign="Left" width="140"></e-grid-column>
                            <e-grid-column headerTextAlign="Center" textAlign="Center" template="#menuContextual" width="30" allowFiltering="false"></e-grid-column>
                        </e-grid-columns>
                    </ejs-grid>

                </section>
                <!--  -------------------- PASO DE PARAMETRO POST ----------------- -->
                <form id="formPasoParametro" action='@Url.Action("Crear", "Tarea")' method="POST">
                    <input type="hidden" id="id" name="id" value="0">
                </form>
            </div>
        </div>
    </div>
</div>

<a id="modalELiminar" href="@Url.Action("MostrarModalEliminar", "Modal")" data-toggle="modal" data-target="#modalBusqueda" hidden></a>


<partial name="_SeccionModal" />

<ejs-contextmenu id="contextmenu" items="Model.menuItems" select="ejecutarAccion"></ejs-contextmenu>

<script type="text/x-template" id="menuContextual">
    <button class="boton-accion" onclick="abrirContextMenu(event, ${id})">
        <i class="fa fa-list-ul"></i>
    </button>
</script>

<script>

    var oGrid;
    var id_parametro = 0;

    function onCreateGrid() {
        oGrid = document.getElementById('Grid').ej2_instances[0];
    }

    $(document).ready(function () {

        //DataSource
        oGrid.dataSource = new ej.data.DataManager({
            url: "@Url.Action("Tarea", "oData")?$orderby=id%20desc",
            adaptor: new ej.data.ODataV4Adaptor(),
            crossDomain: true,
            offline: false
        });


    });

    function Crear() {
        var form = document.getElementById('formPasoParametro');
        document.getElementById('id').value = 0;
        form.submit();
    }

    function ejecutarAccion(args) {
        switch (args.item.id) {
            case "0": // Nada
                break;
            case "1": // Editar
                var form = document.getElementById('formPasoParametro');
                document.getElementById('id').value = id_parametro;
                form.submit();
                break;
            case "2": // Eliminar
                mostrarConfirmacion();
                break;
            default:
        }
    }

    function abrirContextMenu(ev, id) {
        id_parametro = id;
        let x = ev.pageX;
        let y = ev.pageY;
        let contextMenuObj = document.getElementById("contextmenu").ej2_instances[0];
        contextMenuObj.open(y, x);
    }

    function EliminarUsuario(id) {
        $.ajax({
            type: "DELETE",
            url: '@Url.Action("Delete", "Tarea")',
            data: { id: id },
            success: function (data) {
                if (data.transaccion) {
                    mensajeV1("Tarea Eliminado", msgOk);
                    var grid = document.getElementById("Grid").ej2_instances[0];
                    grid.refresh(); // refresh the Grid.
                } else {
                    mensajeV1(data.mensaje, msgError);
                }
            },
            error: function () {
                mensajeV1(errorServidor, msgError);
            }
        });
    }

    function accionEliminar() {
        EliminarUsuario(id_parametro);
    }

</script>

@section Scripts {
    <script>

        function mostrarConfirmacion() {
            document.getElementById("modalELiminar").click();

            }
    </script>
}


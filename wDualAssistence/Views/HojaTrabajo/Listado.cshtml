@{
    ViewData["Title"] = "Engagement";
    ViewData["Navbar-Title"] = "Engagement > Hoja de Trabajo";


    List<object> commandsDelete = new List<object>();
    commandsDelete.Add(new { type = "Delete", buttonOption = new { iconCss = "e-icons e-delete", cssClass = "e-flat" } });


    List<object> commandsAll = new List<object>();
    commandsAll.Add(new { type = "Save", buttonOption = new { iconCss = "e-icons e-save", cssClass = "e-flat" } });
    commandsAll.Add(new { type = "Edit", buttonOption = new { iconCss = "e-icons e-edit", cssClass = "e-flat" } });
    commandsAll.Add(new { type = "Delete", buttonOption = new { iconCss = "e-icons e-delete", cssClass = "e-flat" } });

}
@model wDualAssistence.Models.HojaTrabajoViewModel;

@section Styles {
    <style>
        .spanIcon {
            border-radius: 5px;
            border-style: solid;
            border-color: white;
        }

        .e-datepicker-style {
            width: fit-content !important;
        }

        .e-grid .e-rowcell {
            white-space: pre-wrap !important;
        }
    </style>
}

<div class="content-wrapper">
    <div class="content">
        <div class="panel panel-default">
            <div class="panel-heading heading-primary">
                <form id="frmUsuario" class="form-horizontal" asp-controller="HojaTrabajo" asp-action="Post" autocomplete="off" data-ajax="true" data-ajax-method="POST"
                      data-ajax-begin="onAjaxBegin" data-ajax-complete="onAjaxComplete" data-ajax-loading="#loading"
                      data-ajax-success="fnSuccess(data)" data-ajax-failure="fnFailure()">
                    <span class="capa_btn info">
                        <button type="button" class="btn btn-base crear" onclick="PeriodoAnterior()">
                            <span class="fa span-button info"></span>
                            <p class="text-button-primary">Peridodo anterior</p>
                        </button>
                    </span>
                    <span class="capa_btn info">
                        <button type="button" class="btn btn-base crear" onclick="PeriodoSiguiente()">
                            <span class="fa span-button info"></span>
                            <p class="text-button-primary">Peridodo siguiente</p>
                        </button>
                    </span>
                    semana de:
                    <ejs-datepicker id="semana" format="dd/MM/yyyy" locale="es" cssclass="e-datepicker-style" enabled="false" width="200"></ejs-datepicker>
                    <span class="capa_btn info">
                        <button type="button" class="btn btn-base crear" data-toggle="modal" data-target="#modalNuevaFila">
                            <span class="fa span-button info"></span>
                            <p class="text-button-primary">Agregar Fila</p>
                        </button>
                    </span>
                    <span class="capa_btn confirmar">
                        <button type="submit" class="btn btn-base guardar" onclick="return Guardar()">
                            <span class="fa span-button confirmar"></span>
                            <p class="text-button-primary">GUARDAR CAMBIOS</p>
                        </button>
                    </span>
                    !Solo se guardaran los cambios para la fecha de hoy

                    <input type="hidden" name="stringHojaTrabajo" id="stringHojaTrabajo" />
                </form>
            </div>
            <div class="panel-body">
                <section class="content-body">
                    @*<e-grid-column headerTextAlign="Center" textAlign="Center" template="#menuContextual" width="30" allowEditing="false"></e-grid-column>*@
                    <ejs-grid id="Grid" created="onCreateGrid" allowPaging="true" locale="es" gridLines="Both" actionComplete="actionComplete">
                        <e-grid-editSettings allowAdding="false" allowDeleting="true" allowEditing="true" showDeleteConfirmDialog="true"></e-grid-editSettings>
                        <e-grid-pagesettings pageSize="8"></e-grid-pagesettings>
                        <e-grid-columns>
                            <e-grid-column headerText=" " commands="commandsAll" width="60"></e-grid-column>

                            <e-grid-column field="id_ref" isPrimaryKey="true" visible="false" type="number"></e-grid-column>
                            <e-grid-column field="id" visible="false" type="number"></e-grid-column>
                            <e-grid-column field="fecha" visible="false" type="date"></e-grid-column>
                            <e-grid-column field="id_empresa" visible="false"></e-grid-column>
                            <e-grid-column field="nombre_empresa" headerText="Nombre Cliente" type="string" headerTextAlign="Center" textAlign="Left" width="100" allowEditing="false"></e-grid-column>

                            <e-grid-column field="id_engagement" visible="false"></e-grid-column>
                            <e-grid-column field="titulo_engagement" headerText="Engagement" headerTextAlign="Center" textAlign="Left" width="150" allowEditing="false"></e-grid-column>

                            <e-grid-column field="id_tarea" visible="false"></e-grid-column>
                            <e-grid-column field="nombre_tarea" headerText="Tarea" type="string" headerTextAlign="Center" textAlign="Left" width="120" allowEditing="false"></e-grid-column>
                            <e-grid-column field="total" headerText="Total" type="number" headerTextAlign="Center" textAlign="Right" width="60" allowEditing="false"></e-grid-column>
                            <e-grid-column field="lunes" headerText="LUN"></e-grid-column>
                            <e-grid-column field="martes" headerText="MAR"></e-grid-column>
                            <e-grid-column field="miercoles" headerText="MIE"></e-grid-column>
                            <e-grid-column field="jueves" headerText="JUE"></e-grid-column>
                            <e-grid-column field="viernes" headerText="VIE"></e-grid-column>
                            <e-grid-column field="sabado" headerText="SAB"></e-grid-column>
                            <e-grid-column field="domingo" headerText="DOM"></e-grid-column>
                        </e-grid-columns>
                    </ejs-grid>

                </section>
                <!--  -------------------- PASO DE PARAMETRO POST ----------------- -->
                <form id="formPasoParametro" action='@Url.Action("Crear", "CategoriaTarea")' method="POST">
                    <input type="hidden" id="id" name="id" value="0">
                </form>
            </div>
        </div>
    </div>
</div>

<a id="modalELiminar" href="@Url.Action("MostrarModalEliminar", "Modal")" data-toggle="modal" data-target="#modalBusqueda" hidden></a>


<partial name="_SeccionModal" />
<ejs-contextmenu id="contextmenu" items="Model.menuItems" select="ejecutarAccion"></ejs-contextmenu>

<script type="text/x-template" id="menuContextual">
    <button class="boton-accion" onclick="abrirContextMenu(event, ${ id_engagement }, ${ id_tarea })">
        <i class="fa fa-list-ul"></i>
    </button>
</script>

<!--#region Modal para nueva contraseña -->
<div class="modal fade" id="modalNuevaFila" role="dialog">
    <div class="modal-dialog" style="width:60%;">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h3 style="margin: 0;"><span class="fa fa-lock"></span> Selección de Tareas</h3>
            </div>
            <div class="modal-body" style="padding:20px;">

                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-lg-6 col-md-6">
                        <h4> Empresa:</h4>
                        <div class="e-input-group e-small">
                            <ejs-dropdownlist id="ddlEmpresa" dataSource="@Model.listaEmpresa"
                                              placeholder="Seleccionar la empresa" popupHeight="220px" locale="es"
                                              allowFiltering="true"
                                              change="cambioDllEmpresa"
                                              filterType="Contains">
                                <e-dropdownlist-fields text="nombre" value="id"></e-dropdownlist-fields>
                            </ejs-dropdownlist>
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-lg-6 col-md-6">
                        <h4> Engagement:</h4>
                        <div class="e-input-group e-small">
                            <ejs-dropdownlist id="ddlEngagement"
                                              placeholder="Seleccionar el engagement" popupHeight="220px" locale="es"
                                              allowFiltering="true"
                                              change="cambioDllEngagement"
                                              filterType="Contains">
                                <e-dropdownlist-fields text="titulo" value="id"></e-dropdownlist-fields>
                            </ejs-dropdownlist>
                        </div>
                    </div>
                </div>
                <div class="row">

                    <div class="col-xs-12 col-sm-12 col-lg-10 col-md-10">
                        <h4> Tarea:</h4>@*change="cambioDdlTarea"*@
                        <div class="e-input-group e-small">
                            <ejs-dropdownlist id="ddlTarea"
                                              placeholder="Seleccionar la tarea" popupHeight="220px" locale="es"
                                              allowFiltering="true"
                                              filterType="Contains">
                                <e-dropdownlist-fields text="nombre" value="id"></e-dropdownlist-fields>
                            </ejs-dropdownlist>
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-12 col-lg-2 col-md-2">
                        <br />
                        <span class="capa_btn info">
                            <button type="button" class="btn btn-base crear" onclick="AgregarItem()">
                                <span class="fa span-button info"></span>
                                <p class="text-button-primary">Agregar</p>
                            </button>
                        </span>
                    </div>
                </div>

                <br />

                <ejs-grid id="GridAgregar" allowPaging="true" locale="es" gridLines="Both">
                    <e-grid-editSettings allowAdding="false" allowDeleting="true" allowEditing="true" showDeleteConfirmDialog="true"></e-grid-editSettings>
                    <e-grid-pagesettings pageSize="8"></e-grid-pagesettings>
                    <e-grid-columns>
                        <e-grid-column headerText=" " commands="commandsDelete" width="30"></e-grid-column>
                        <e-grid-column field="id" isPrimaryKey="true" visible="false" type="number"></e-grid-column>
                        <e-grid-column field="id_engagement" visible="false"></e-grid-column>
                        <e-grid-column field="titulo_engagement" headerText="Engagement" headerTextAlign="Center" textAlign="Left" width="150" allowEditing="false"></e-grid-column>
                        <e-grid-column field="id_empresa" visible="false"></e-grid-column>
                        <e-grid-column field="nombre_empresa" headerText="Nombre Cliente" type="string" headerTextAlign="Center" textAlign="Left" width="100" allowEditing="false"></e-grid-column>
                        <e-grid-column field="id_tarea" visible="false"></e-grid-column>
                        <e-grid-column field="nombre_tarea" headerText="Tarea" type="string" headerTextAlign="Center" textAlign="Left" width="120" allowEditing="false"></e-grid-column>
                    </e-grid-columns>
                </ejs-grid>

            </div>
            <div class="modal-footer">
                <span class="capa_btn confirmar">
                    <button id="btnCambiarContra" type="button" class="btn btn-base guardar" onclick="AgregarFila()">
                        <span class="fa span-button confirmar"></span>
                        <p class="text-button-primary">Agregar Fila</p>
                    </button>
                </span>
            </div>
        </div>
    </div>
</div>


<!--#endregion-->

<script>


    var oGrid;
    var id_engagement = 0;
    var id_tarea = 0;

    function onCreateGrid() {
        oGrid = document.getElementById('Grid').ej2_instances[0];

        let dateInitial = document.getElementById("semana").ej2_instances[0].value;

    }

    function getMonday(d) {
        d = new Date(d);
        var day = d.getDay(),
            diff = d.getDate() - day + (day == 0 ? -6 : 1); // adjust when day is sunday
        return new Date(d.setDate(diff));
    }

    $(document).ready(function () {

        let dateInitial = getMonday(new Date()); // Mon Nov 08 2010
        document.getElementById("semana").ej2_instances[0].value = dateInitial;
        RefrecarColumnas(getMonday(new Date()));

        GetDataSource();
    });

    function GetDataSource() {
        let dateInitial = document.getElementById("semana").ej2_instances[0].value;
        let fecha = dateInitial.getFullYear() + "-" + (dateInitial.getMonth() + 1) + "-" + dateInitial.getDate();
        onAjaxBegin();
        $.ajax(
        {
            type: "GET",
            url: '@Url.Action("GetListaBySemana", "HojaTrabajo")/' + fecha,
            success: function (data) {
                //args.rowData.total = data.total;
                var dataAux = [];
                contadorFila = 0;
                if (data != null) {

                    data.forEach(function (item) {
                        if (item.lunes == 0)
                            item.lunes = null;
                        if (item.martes == 0)
                            item.martes = null;
                        if (item.miercoles == 0)
                            item.miercoles = null;
                        if (item.jueves == 0)
                            item.jueves = null;
                        if (item.viernes == 0)
                            item.viernes = null;
                        if (item.sabado == 0)
                            item.sabado = null;
                        if (item.domingo == 0)
                            item.domingo = null;

                        contadorFila++;
                        item.id_ref = contadorFila;
                        dataAux.push(item);
                    });
                }

                oGrid.dataSource = dataAux;
                oGrid.refresh();
                onAjaxComplete();
                //mensajeV1('Cambios guardados', msgInformacion);
            },
            error: function () {
                onAjaxComplete();
                mensajeV1('No se pudo conectar con el servicio', msgError);
            }
        });
    }

    function ejecutarAccion(args) {
        switch (args.item.id) {
            case "0": // Nada
                break;
            case "1": // Eliminar
                document.getElementById("modalELiminar").click();
                break;
            default:
        }
    }

    function abrirContextMenu(ev, pid_engagement, pid_tarea) {
        id_engagement = pid_engagement;
        id_tarea = pid_tarea;
        let x = ev.pageX;
        let y = ev.pageY;
        let contextMenuObj = document.getElementById("contextmenu").ej2_instances[0];
        contextMenuObj.open(y, x);
    }

    function accionEliminar() {
        console.log("Confirmo eliminar");
        let dateInitial = document.getElementById("semana").ej2_instances[0].value;
        let fecha = dateInitial.getFullYear() + "-" + (dateInitial.getMonth() + 1) + "-" + dateInitial.getDate();
        $.ajax({
            type: "DELETE",
            url: '@Url.Action("Delete", "HojaTrabajo")/' + id_engagement + '/' + id_tarea + '/' + fecha,
            success: function () {
                mensajeV1("Tareas Eliminadas", msgOk);
                //var grid = document.getElementById("Grid").ej2_instances[0];
                //grid.refresh(); // refresh the Grid.
                location.reload();
            },
            error: function () {
                mensajeV1(errorServidor, msgError);
            }
        });
    }


</script>
@section PreScripts{
    <script>
        function tooltip(args) { // event triggers on every cell render.
            new ej.popups.Tooltip({
                content: args.data[args.column.field].toString() // add Essential JS2 tooltip for every cell.
            }, args.cell);
            console.log(args);
        }
    </script>
    <script>
        var contadorFila = 0;
        function cambioDllEmpresa(agr) {
            var ddlEngagement = document.getElementById('ddlEngagement').ej2_instances[0];
            let dateInitial = document.getElementById("semana").ej2_instances[0].value;
            let fecha = dateInitial.getFullYear() + "-" + (dateInitial.getMonth() + 1) + "-" + dateInitial.getDate();
            if (agr.itemData == null || agr.itemData.id == 0) {
                ddlEngagement.dataSource = [];
            } else {
                let id_empresa = agr.itemData.id;
                onAjaxBegin();
                $.ajax(
                {
                    type: "GET",
                    url: '@Url.Action("GetListaByEmpresa", "Engagement")/' + id_empresa + '/' + fecha,
                    success: function (data) {
                        ddlEngagement.dataSource = data;
                        onAjaxComplete();
                        if (!ddlEngagement.dataSource.length) { //si el arreglo es vacio
                            mensajeV1("Esta empresa no tiene Engagement habilitados !", msgAlerta);
                        } else {
                            ddlEngagement.value = null;
                            ddlEngagement.text = null;
                        }
                    },
                    error: function () {
                        onAjaxComplete();
                        mensajeV1('No se pudo conectar con el servicio', msgError);
                    }
                });
            }
        }
        function cambioDllEngagement(agr) {

            var ddlTarea = document.getElementById('ddlTarea').ej2_instances[0];

            if (agr.itemData == null || agr.itemData.id == 0) {
                ddlTarea.dataSource = [];
            } else {
                let id_engagement = agr.itemData.id;
                onAjaxBegin();
                $.ajax(
                {
                    type: "GET",
                    url: '@Url.Action("GetListaByEngagement", "Tarea")/' + id_engagement,
                    success: function (data) {
                        ddlTarea.dataSource = data;
                        onAjaxComplete();
                        if (!ddlTarea.dataSource.length) { //si el arreglo es vacio
                            mensajeV1("Este Engagement no tiene Tareas registradas !", msgAlerta);
                        } else {
                            mensajeV1("Lista de Tareas Cargada", msgInformacion);
                        }
                    },
                    error: function () {
                        onAjaxComplete();
                        mensajeV1('No se pudo conectar con el servicio', msgError);
                    }
                });
            }
        }
        function cambioDdlTarea(agr) {

            if (agr.itemData == null || agr.itemData.id == 0) {

            } else {
                let GridAgregar = document.getElementById('GridAgregar').ej2_instances[0];
                let ddlEmpresa = document.getElementById('ddlEmpresa').ej2_instances[0];
                let ddlEngagement = document.getElementById('ddlEngagement').ej2_instances[0];
                let ddlTarea = document.getElementById('ddlTarea').ej2_instances[0];
                let id_tarea = agr.itemData.id;
                contadorFila++;

                GridAgregar.dataSource.push({
                    id: contadorFila,
                    id_engagement: ddlEngagement.value,
                    titulo_engagement: ddlEngagement.text,
                    id_empresa: ddlEmpresa.value,
                    nombre_empresa: ddlEmpresa.text,
                    id_tarea: agr.itemData.id,
                    nombre_tarea: agr.itemData.nombre
                });
                ddlEmpresa.value = null;
                ddlEngagement.value = null;
                ddlTarea.value = null;

                //agr.dataSource = [];
                GridAgregar.refresh();
            }
        }

        function AgregarItem() {
            let GridAgregar = document.getElementById('GridAgregar').ej2_instances[0];
            let ddlEmpresa = document.getElementById('ddlEmpresa').ej2_instances[0];
            let ddlEngagement = document.getElementById('ddlEngagement').ej2_instances[0];
            let ddlTarea = document.getElementById('ddlTarea').ej2_instances[0];
            let id_tarea = ddlTarea.value;
            if (id_tarea == null || id_tarea == 0) {
                mensajeV1("El campo Tarea es requerido", msgInformacion);
                return;
            }
            contadorFila++;

            GridAgregar.dataSource.push({
                id: contadorFila,
                id_engagement: ddlEngagement.value,
                titulo_engagement: ddlEngagement.text,
                id_empresa: ddlEmpresa.value,
                nombre_empresa: ddlEmpresa.text,
                id_tarea: ddlTarea.value,
                nombre_tarea: ddlTarea.text
            });
            ddlEmpresa.value = null;
            ddlEngagement.value = null;
            ddlTarea.value = null;

            //agr.dataSource = [];
            GridAgregar.refresh();
        }
    </script>
    <script>
        var contadorFila = 0;
        function AgregarFila() {

            let GridAgregar = document.getElementById("GridAgregar").ej2_instances[0];
            let dateInitial = document.getElementById("semana").ej2_instances[0].value;
            let fecha = dateInitial.getFullYear() + "-" + ("0" + (dateInitial.getMonth() + 1)).slice(-2) + "-" + ("0" + dateInitial.getDate()).slice(-2);
            let fechaDtl = ("0" + dateInitial.getDate()).slice(-2) + "/" + ("0" + (dateInitial.getMonth() + 1)).slice(-2) + "/" + dateInitial.getFullYear();

            GridAgregar.dataSource.forEach(function (item) {

                $.ajax(
                {
                    type: "GET",
                        url: '@Url.Action("ExisteDetalle", "HojaTrabajo")/' + fecha + "/" + item.id_engagement + "/" + item.id_tarea,
                        success: function (data) {
                        if (!data) {
                            contadorFila++;
                            oGrid.dataSource.push({
                                id_ref: contadorFila,
                                id: 0,
                                fecha: fechaDtl,
                                id_empresa: item.id_empresa,
                                nombre_empresa: item.nombre_empresa,
                                id_engagement: item.id_engagement,
                                titulo_engagement: item.titulo_engagement,
                                id_tarea: item.id_tarea,
                                nombre_tarea: item.nombre_tarea,
                            });
                            oGrid.refreshColumns();

                        } else {
                            ddlTarea.value = null;
                            mensajeV1('Ya tiene agregado esa tarea en el detalla de la semana !', msgInformacion);
                        }
                    },
                    error: function () {
                        mensajeV1('No se pudo conectar con el servicio', msgError);
                    }
                });



            });

            ddlEmpresa.value = null;
            $("#modalNuevaFila").modal('hide');
            GridAgregar.dataSource = [];
            GridAgregar.refresh();


        }
    </script>

    <script>
        var valorLunes = 0;
        var valorMartes = 0;
        var valorMiercoles = 0;
        var valorJueves = 0;
        var valorViernes = 0;
        var estadoEdicion = false;
        function actionComplete(args) {
            if (args.requestType === 'beginEdit') {
                valorLunes = args.rowData.lunes;
                valorMartes = args.rowData.martes;
                valorMiercoles = args.rowData.miercoles;
                valorJueves = args.rowData.jueves;
                valorViernes = args.rowData.viernes;
                estadoEdicion = true;
            } else {
                estadoEdicion = false;
            }
            if (args.requestType === 'save') {
                let dateSemana = document.getElementById("semana").ej2_instances[0];
                let dateInitial = new Date(dateSemana.value);

                args.rowData.fecha = ("0" + dateInitial.getDate()).slice(-2) + "/" + ("0" + (dateInitial.getMonth() + 1)).slice(-2) + "/" + dateInitial.getFullYear();
                let total = 0;
                //---------------validar que los valores esten entre 0.25 y 8 (esto ulitmo varia porque hay turno de 6 o mas de 8 horas)
                if (args.rowData.lunes != null && args.rowData.lunes < 0.25) {
                    args.rowData.lunes = null;
                    args.rowData.total = total + 0;
                    oGrid.refresh();
                    //mensajeV1("El valor debe ser entre 0.25 y 8", msgAlerta);
                    mensajeV1("El valor debe ser mayor a 0.25", msgAlerta);
                    return;
                }
                total += args.rowData.lunes;
                if (args.rowData.martes != null && args.rowData.martes < 0.25) {
                    args.rowData.martes = null;
                    args.rowData.total = total + 0;
                    oGrid.refresh();
                    mensajeV1("El valor debe ser mayor a 0.25", msgAlerta);
                    return;
                }
                total += args.rowData.martes;
                if (args.rowData.miercoles != null && args.rowData.miercoles < 0.25) {
                    args.rowData.miercoles = null;
                    args.rowData.total = total + 0;
                    oGrid.refresh();
                    mensajeV1("El valor debe ser mayor a 0.25", msgAlerta);
                    return;
                }
                total += args.rowData.miercoles;
                if (args.rowData.jueves != null && args.rowData.jueves < 0.25) {
                    args.rowData.jueves = null;
                    args.rowData.total = total + 0;
                    oGrid.refresh();
                    mensajeV1("El valor debe ser mayor a 0.25", msgAlerta);
                    return;
                }
                total += args.rowData.jueves;
                if (args.rowData.viernes != null && args.rowData.viernes < 0.25) {
                    args.rowData.viernes = null;
                    args.rowData.total = total + 0;
                    oGrid.refresh();
                    mensajeV1("El valor debe ser mayor a 0.25", msgAlerta);
                    return;
                }
                total += args.rowData.viernes;
                if (args.rowData.sabado != null && args.rowData.sabado < 0.25) {
                    args.rowData.sabado = null;
                    args.rowData.total = total + 0;
                    oGrid.refresh();
                    mensajeV1("El valor debe ser mayor a 0.25", msgAlerta);
                    return;
                }
                total += args.rowData.sabado;
                if (args.rowData.domingo != null && args.rowData.domingo < 0.25) {
                    args.rowData.domingo = null;
                    args.rowData.total = total + 0;
                    oGrid.refresh();
                    mensajeV1("El valor debe ser mayor a 0.25", msgAlerta);
                    return;
                }
                total += args.rowData.domingo;


                //----- cambiar los valores de 0 a null
                if (args.rowData.lunes == 0)
                    args.rowData.lunes = null;
                if (args.rowData.martes == 0)
                    args.rowData.martes = null;
                if (args.rowData.miercoles == 0)
                    args.rowData.miercoles = null;
                if (args.rowData.jueves == 0)
                    args.rowData.jueves = null;
                if (args.rowData.viernes == 0)
                    args.rowData.viernes = null;
                if (args.rowData.sabado == 0)
                    args.rowData.sabado = null;
                if (args.rowData.domingo == 0)
                    args.rowData.domingo = null;

                oGrid.refresh();


            }
            console.log(args.requestType);
            if (args.requestType == "delete") {
                console.log("Delete", args.rowData);
                args.cancel = true;

                //var grid = $("#BoardsGrid").ejGrid("instance");
                ////alert("Delete id: " + id);

                //if (confirm("Delete " + grid.getCurrentViewData()[index].Name) === true) {
                //    //alert("Delete id: " + id);
                //}
                //else
                //    args.cancel = true; //here you can prevent the delete action from grid

            }

        }
    </script>

}
@section Scripts {
    <script>
        function Guardar() {
            if (estadoEdicion) {
                mensajeV1("Debe confirmar la carga de hora antes de guardar los cambios !", msgAlerta);
                return false;
            }
            let sDetalle = JSON.stringify(oGrid.dataSource);
            document.getElementById("stringHojaTrabajo").value = sDetalle.split("null").join("0");

            let tota_lunes = 0;
            let tota_martes = 0;
            let tota_miercoles = 0;
            let tota_jueves = 0;
            let tota_viernes = 0;
            let tota_sabado = 0;
            let tota_domingo = 0;
            oGrid.dataSource.forEach(function (item) {
                tota_lunes += item.lunes;
                tota_martes += item.martes;
                tota_miercoles += item.miercoles;
                tota_jueves += item.jueves;
                tota_viernes += item.viernes;
                tota_sabado += item.sabado;
                tota_domingo += item.domingo;
            });
            @*if (tota_lunes > 8) {
                mensajeV1("El total de horas del día lunes (" + tota_lunes + ") no debe ser mayor a 8", msgAlerta);
                return false;
            }
            if (tota_martes > 8) {
                mensajeV1("El total de horas del día martes (" + tota_martes + ") no debe ser mayor a 8", msgAlerta);
                return false;
            }
            if (tota_miercoles > 8) {
                mensajeV1("El total de horas del día miercoles (" + tota_miercoles + ") no debe ser mayor a 8", msgAlerta);
                return false;
            }
            if (tota_jueves > 8) {
                mensajeV1("El total de horas del día jueves (" + tota_jueves + ") no debe ser mayor a 8", msgAlerta);
                return false;
            }
            if (tota_viernes > 8) {
                mensajeV1("El total de horas del día viernes (" + tota_viernes + ") no debe ser mayor a 8", msgAlerta);
                return false;
            }
            if (tota_sabado > 8) {
                mensajeV1("El total de horas del día sabado (" + tota_sabado + ") no debe ser mayor a 8", msgAlerta);
                return false;
            }
            if (tota_domingo > 8) {
                mensajeV1("El total de horas del día domingo (" + tota_domingo + ") no debe ser mayor a 8", msgAlerta);
                return false;
            }*@

            return true;
        }

        //Despues del Submit del Form Principal
        function fnSuccess(data) {
            if (data.transaccion == true) {
                mensajeV1("Transacción exitosa!", msgOk);
                location.reload();
            }
            else {
                mensajeV1(data.mensaje, msgAlerta);
            }
        }

        function fnFailure() {
            mensajeV1(errorServidor, msgError);
        }

    </script>
    <script>

        function PeriodoAnterior() {
            let dateSemana = document.getElementById("semana").ej2_instances[0];
            let dateInitial = new Date(dateSemana.value);

            dateInitial = dateInitial.setDate(dateInitial.getDate() - 7);
            dateSemana.value = getMonday(new Date(dateInitial));

            RefrecarColumnas(getMonday(new Date(dateInitial)));
            GetDataSource();
            let ddlEmpresa = document.getElementById("ddlEmpresa").ej2_instances[0];
            ddlEmpresa.value = null;
        }

        function PeriodoSiguiente() {
            var dateSemana = document.getElementById("semana").ej2_instances[0];
            var dateInitial = new Date(dateSemana.value);

            dateInitial = dateInitial.setDate(dateInitial.getDate() + 7);
            dateSemana.value = getMonday(new Date(dateInitial));
            RefrecarColumnas(getMonday(new Date(dateInitial)));
            GetDataSource();
            let ddlEmpresa = document.getElementById("ddlEmpresa").ej2_instances[0];
            ddlEmpresa.value = null;
        }

        function RefrecarColumnas(dateInitial) {

            oGrid.columns.splice(11, 7);
            let dateToday = new Date();

            let allowEditingLUN = (dateInitial <= dateToday);
            oGrid.columns.push({ field: "lunes", headerText: "LU, " + dateInitial.getDate() + "/" + (dateInitial.getMonth() + 1), headerTextAlign: "Center", textAlign: "Right", width: "60", allowEditing: allowEditingLUN, type: "number" });

            dateInitial = new Date(dateInitial.setDate(dateInitial.getDate() + 1));
            let allowEditingMAR = (dateInitial <= dateToday);
            oGrid.columns.push({ field: "martes", headerText: "MA, " + dateInitial.getDate() + "/" + (dateInitial.getMonth() + 1), headerTextAlign: "Center", textAlign: "Right", width: "60", allowEditing: allowEditingMAR, type: "number" });

            dateInitial = (new Date(dateInitial.setDate(dateInitial.getDate() + 1)));
            let allowEditingMIE = (dateInitial <= dateToday);
            console.log("allowEditingMIE", allowEditingMIE);
            oGrid.columns.push({ field: "miercoles", headerText: "MI, " + dateInitial.getDate() + "/" + (dateInitial.getMonth() + 1), headerTextAlign: "Center", textAlign: "Right", width: "60", allowEditing: allowEditingMIE, type: "number" });

            dateInitial = (new Date(dateInitial.setDate(dateInitial.getDate() + 1)));
            let allowEditingJUE = (dateInitial <= dateToday);
            oGrid.columns.push({ field: "jueves", headerText: "JU, " + dateInitial.getDate() + "/" + (dateInitial.getMonth() + 1), headerTextAlign: "Center", textAlign: "Right", width: "60", allowEditing: allowEditingJUE, type: "number" });

            dateInitial = (new Date(dateInitial.setDate(dateInitial.getDate() + 1)));
            let allowEditingVIE = (dateInitial <= dateToday);
            oGrid.columns.push({
                field: "viernes",
                headerText: "VI, " + dateInitial.getDate() + "/" + (dateInitial.getMonth() + 1),
                headerTextAlign: "Center",
                textAlign: "Right",
                width: "60",
                allowEditing: allowEditingVIE,
                type: "number"
            });

            dateInitial = (new Date(dateInitial.setDate(dateInitial.getDate() + 1)));
            let allowEditingSAB = (dateInitial <= dateToday);
            oGrid.columns.push({
                field: "sabado",
                headerText: "SA, " + dateInitial.getDate() + "/" + (dateInitial.getMonth() + 1),
                headerTextAlign: "Center",
                textAlign: "Right",
                width: "60",
                allowEditing: allowEditingSAB,
                type: "number"
            });

            dateInitial = (new Date(dateInitial.setDate(dateInitial.getDate() + 1)));
            let allowEditingDOM = (dateInitial <= dateToday);
            oGrid.columns.push({ field: "domingo", headerText: "DO, " + dateInitial.getDate() + "/" + (dateInitial.getMonth() + 1), headerTextAlign: "Center", textAlign: "Right", width: "60", allowEditing: allowEditingDOM, type: "number" });

            oGrid.refreshColumns();

        }

    </script>
}

